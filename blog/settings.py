"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


import os
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = str(os.environ.get("DJANGO_DEBUG")) == "1"

ALLOWED_HOSTS = []
if not DEBUG:
    ALLOWED_HOSTS+= [os.environ.get("DJANGO_ALLOWED_HOST")]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'crispy_bootstrap4',
    'django_htmx',
    'articles',
    'accounts',
    'comments',
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap4"
CRISPY_TEMPLATE_PACK = "bootstrap4"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_htmx.middleware.HtmxMiddleware',
]

ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 除了在各个app文件夹中寻找，还有哪些templates文件夹的路径
        'DIRS': [
            BASE_DIR / "templates",
        ],
        # 是否应该在各个app文件夹中寻找templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

##################################

# DEBUG=1 时寻找额外的staticfile的路径（本来就包括了各app内的static文件）
# .\manage.py collectstatic 时copy文件的路径
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# 在部署的时候Django本身不再到各个app以及STATICFILES_DIRS指定的路径寻找staticfile
# 而是让其他软件（比如Nginx）辅助提供staticfile
# 就需要提前使用
# py .\manage.py collectstatic 指令去收集staticfile 到 STATIC_ROOT 中
STATIC_ROOT = BASE_DIR / "staticfiles"

# 动态的（用户上传的）文件的存储路径
MEDIA_ROOT = BASE_DIR / "media"

if DEBUG:
    # 网址中的staticfile的URL前缀
    STATIC_URL = '/static/'

    # 动态的（用户上传的）文件的URL前缀
    MEDIA_URL = "/media/"
else:
    CDU_URL = 'http://127.0.0.1:8800'

    # 网址中的staticfile的URL前缀
    STATIC_URL = 'http://127.0.0.1:8800/static/'

    # 动态的（用户上传的）文件的URL前缀
    MEDIA_URL = "http://127.0.0.1:8800/media/"

##################################

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = '/login/' # 用@login_required装饰的view会跳转到这个LOGIN_URL